// Qt3D Editor generated file
// v0.1
// This file was generated by a tool. Do not modify it manually!
import QtQuick.Scene3D 2.0
import Qt3D.Core 2.0
import Qt3D.Render 2.0
import Qt3D.Extras 2.0
import Qt3D.Input 2.0

Scene3D {
    property alias scene_root: scene_root
    property alias camera: camera
    property alias cube: cube
    property alias cube_cuboidmesh: cube_cuboidmesh
    property alias cube_transform: cube_transform
    property alias light: light
    property alias scene_root_pointlight: scene_root_pointlight
    property alias light_transform: light_transform
    property alias scene_render_settings: scene_render_settings
    property alias scene_input_settings: scene_input_settings
    property alias scene_root_transform: scene_root_transform
    property alias cube_diffusemapmaterial: cube_diffusemapmaterial

    aspects: ["render","input"]
    function addComponentToEntity(entity, component) {
        var entityComponents = []
        for (var i = 0; i < entity.components.length; i++)
            entityComponents.push(entity.components[i])
        entityComponents.push(component)
        entity.components = entityComponents
    }
    function removeComponentFromEntity(entity, component) {
        var entityComponents = []
        for (var i = 0; i < entity.components.length; i++) {
            if (entity.components[i] !== component)
                entityComponents.push(entity.components[i])
        }
        entity.components = entityComponents
    }
    Entity {
        InputSettings {
            id: scene_input_settings // Scene Input settings
        }
        RenderSettings {
            id: scene_render_settings // Scene render settings
            activeFrameGraph: ForwardRenderer {
                clearColor: "#c0c0c0"
                camera: camera
            }
        }
        components: [scene_render_settings,scene_input_settings]

        // --- Scene start ---
        Entity {
            id: scene_root // Scene root
            Transform {
                id: scene_root_transform
            }
            components: [
                scene_root_transform
            ]
            Camera {
                id: camera // Camera
                farPlane: 50
                fieldOfView: 45
                aspectRatio: 1.7777777910232544
                projectionMatrix: Qt.matrix4x4(1.358,0,0,0,0,2.41421,0,0,0,0,-1.00401,-0.200401,0,0,-1,0)
                position: Qt.vector3d(5,5,5)
                viewCenter: Qt.vector3d(0,0,0)
            }
            Entity {
                id: cube // Cube
                CuboidMesh {
                    id: cube_cuboidmesh
                }
                Transform {
                    id: cube_transform
                    matrix: Qt.matrix4x4(-1,8.74228e-8,0,0,-8.74228e-8,-1,0,0,0,0,1,5,0,0,0,1)
                    rotation: Qt.quaternion(-4.37114e-8,0,0,1)
                    translation: Qt.vector3d(0,0,0)
                    rotationZ: -180
                }
                DiffuseMapMaterial {
                    id: cube_diffusemapmaterial
                    diffuse: "qrc:///%{SceneItemName}_scene_res/r0_qtlogo.png"
                }
                components: [
                    cube_cuboidmesh,
                    cube_transform,
                    cube_diffusemapmaterial
                ]
            }
            Entity {
                id: light // Light
                PointLight {
                    id: scene_root_pointlight
                    intensity: 1
                }
                Transform {
                    id: light_transform
                    matrix: Qt.matrix4x4(1,0,0,0,0,1,0,10,0,0,1,-5,0,0,0,1)
                    translation: Qt.vector3d(5,5,5)
                }
                components: [
                    scene_root_pointlight,
                    light_transform
                ]
            }
        }
    }
}
